version: '3'

networks:
  laravel:

services:
  app:
    build:
      context: .
      dockerfile: nginx.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - '${DC_APP_PORT:-80}:80'
    env_file:
      - .env
    volumes:
      - .:/var/www/html:delegated
    depends_on:
      - php
      - redis
      - node
      - websocket
      - db
    networks:
      laravel:
        aliases:
          - catalog.local

  db:
    image: mgkio/postgis:12-3.1
    restart: unless-stopped
    tty: true
    ports:
        - '${DC_DB_PORT:-5432}:5432'
    environment:
      POSTGRES_DB: catalog_local
      POSTGRES_USER: catalog_local
      POSTGRES_PASSWORD: catalog_local
    networks:
      - laravel

  php:
    env_file:
      - .env
    build:
      context: .
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - .:/var/www/html:delegated
    networks:
      - laravel

  redis:
    env_file:
      - .env
    image: redis:alpine
    restart: unless-stopped
    networks:
      - laravel

  composer:
    env_file:
      - .env
    build:
      context: .
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - .:/var/www/html
    entrypoint: [ 'composer' ]
    networks:
      - laravel

  node:
    env_file:
      - .env
    image: node:current-alpine
    ports:
        - '${DC_NODE_PORT:-3000}:3000'
    stdin_open: true
    volumes:
      - ./:/var/www/html:delegated
    working_dir: /var/www/html/frontend
    networks:
      - laravel

  websocket:
    image: 'quay.io/soketi/soketi:1.4-16-debian'
    environment:
        SOKETI_DEBUG: '1'
        SOKETI_METRICS_SERVER_PORT: '9601'
    ports:
        - '${SOKETI_PORT:-6001}:6001'
        - '${SOKETI_METRICS_SERVER_PORT:-9601}:9601'
    networks:
      - laravel
